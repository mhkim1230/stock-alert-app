name: Stock Alert Backend CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests with pytest
      run: |
        pip install pytest pytest-cov
        pytest tests/ \
          --cov=src \
          --cov-report=xml \
          -v -s
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/stock-alert-backend:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/stock-alert-backend:${{ github.sha }}
    
    - name: Deploy to Production
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/stock-alert-backend:latest
          docker stop stock-alert-backend || true
          docker rm stock-alert-backend || true
          docker run -d \
            --name stock-alert-backend \
            -p 8000:8000 \
            -e SECRET_KEY=${{ secrets.SECRET_KEY }} \
            -e APNS_KEY_ID=${{ secrets.APNS_KEY_ID }} \
            -e APNS_TEAM_ID=${{ secrets.APNS_TEAM_ID }} \
            ${{ secrets.DOCKERHUB_USERNAME }}/stock-alert-backend:latest 